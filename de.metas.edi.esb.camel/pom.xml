<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.metas.esb</groupId>
		<artifactId>de.metas.esb</artifactId>
		<version>10.0.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>de.metas.edi.esb</groupId>
	<artifactId>de.metas.edi.esb.camel</artifactId>

	<description>metasfresh :: Components :: EDI (SMX-6.1.0)</description>

	<packaging>bundle</packaging>

	<properties>
		<smooks.version>1.5.1</smooks.version>
		<jaxb.packageName>de.metas.edi.esb.jaxb</jaxb.packageName>
	</properties>

	<dependencies>
		<dependency>
			<artifactId>camel-test</artifactId>
			<groupId>org.apache.camel</groupId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- ADDITIONAL DEPENDENCIES for our use cases -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jms</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-camel</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>camel-jms</artifactId>
					<groupId>org.apache.camel</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-script</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jaxb</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-ftp</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- EDI dependency to install in smx, do the following: extract the features.xml 
			file from the smooks-all.jar and store it for example as /home/servicemix/esb/bundles/milyn-smooks-1.5.1-feature.xml 
			enter the following from smx-console feature:repo-add file:///home/servicemix/esb/bundles/milyn-smooks-1.5.1-feature.xml 
			feature:install smooks -->
		<dependency>
			<groupId>org.milyn</groupId>
			<artifactId>milyn-smooks-all</artifactId>
			<version>${smooks.version}</version>
			<exclusions>
				<!-- excluding xercesImpl to get rid of org.xml.sax.SAXNotRecognizedException: 
					Feature 'http://javax.xml.XMLConstants/feature/secure-processing' is not 
					recognized. thx to http://stackoverflow.com/questions/25644023/error-unmarshalling-xml-in-java-8-secure-processing-org-xml-sax-saxnotrecognize -->
				<exclusion>
					<artifactId>xercesImpl</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- needed by smooks -->
		<dependency>
			<artifactId>commons-logging</artifactId>
			<groupId>commons-logging</groupId>
			<version>1.2</version>
		</dependency>

		<!-- SLF4J Logger dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Guava: needed for misc helper classes which ease development To install 
			in the OSGI container (smx), do bundle:install mvn:com.google.guava/guava/18.0 
			If changing the version, please make sure there is also an OSGI bundle for 
			the new version -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<!-- Apache POI: required for Excel importing support. is included in this 
			bundle directly -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.13</version>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- The following is just for documentation. Installing the poi osgi bundle 
			in servicemix 4 was a pain, and i didn't event manage to do it in servicemix-6.1.0 
			Instead I'm directly including the poi classes in *this* bundle, see maven-bundle-plugin 
			in the build section below. -->
		<!-- To install in the OSGI container (smx), do bundle:install mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.poi/3.13_1 
			If changing the version, please make sure there is also an OSGI bundle for 
			the new version 
			<dependency> 
				<groupId>org.apache.servicemix.bundles</groupId> 
				<artifactId>org.apache.servicemix.bundles.poi</artifactId> 
				<version>3.13_1</version> 
			</dependency> 
			<! a dependency of poi > 
			<dependency> 
				<groupId>commons-codec</groupId> 
				<artifactId>commons-codec</artifactId>
			</dependency> <! Needed to avoid the 
			following error when deploying the bundle: org.osgi.framework.BundleException: 
			Unresolved constraint in bundle de.metas.edi.esb [254]: Unable to resolve 
			254.0: missing requirement [254.0] package; (&(package=org.apache.poi.hssf.usermodel)(version>=3.11.0)(!(version>=4.0.0))) 
			[caused by: Unable to resolve 244.0: missing requirement [244.0] package; 
			(package=org.etsi.uri.x01903.v14)] To install in the OSGI container (smx), 
			do bundle:install -s wrap:mvn:org.apache.poi/ooxml-security/1.0 Notes: *org.apache.servicemix.bundles.poi 
			- 3.12_1 only contains org.etsi.uri.x01903.v13 *i was not able to event find 
			the particular part where v14 is actually declared as a requirement, so there 
			might also be some glitch with servicemix > <dependency> <groupId>org.apache.poi</groupId> 
			<artifactId>ooxml-security</artifactId> <version>1.0</version> </dependency> -->
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<defaultGoal>install</defaultGoal>

		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<!--  
						Note about Bundle-Version:
						
						We want to avoid this error:
						Invalid value for Bundle-Version, FRESH-307-SNAPSHOT-149 does not match [0-9]{1,9}(\.[0-9]{1,9}(\.[0-9]{1,9}(\.[0-9A-Za-z_-]+)?)?)?
						since we want to have the info about which branch and which build# in the version and this string currently is "FRESH-307-SNAPSHOT-149",
						we set the bundle version to 0.0.0.FRESH-307-SNAPSHOT-149
						
						Thx to http://www.regexpal.com/
						-->
						<Bundle-Version>0.0.0.${project.version}-${env.BUILD_NUMBER}</Bundle-Version>

						<!-- include poi and commons-logging in this bundle, because we can't deploy them into the OSGI-container 
							regarding loggins, also see https://cwiki.apache.org/confluence/display/commons/CommonsOsgi
						-->
						<Private-Package>
							org.apache.poi.*,
							org.apache.commons.logging.*
							{local-packages}
						</Private-Package>

					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<packageName>${jaxb.packageName}</packageName>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>